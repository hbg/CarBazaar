# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: test_v1.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode("latin1"))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.cloud.firestore_v1.proto import (
    common_pb2 as google_dot_cloud_dot_firestore__v1_dot_proto_dot_common__pb2,
)
from google.cloud.firestore_v1.proto import (
    document_pb2 as google_dot_cloud_dot_firestore__v1_dot_proto_dot_document__pb2,
)
from google.cloud.firestore_v1.proto import (
    firestore_pb2 as google_dot_cloud_dot_firestore__v1_dot_proto_dot_firestore__pb2,
)
from google.cloud.firestore_v1.proto import (
    query_pb2 as google_dot_cloud_dot_firestore__v1_dot_proto_dot_query__pb2,
)
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
    name="test_v1.proto",
    package="tests.v1",
    syntax="proto3",
    serialized_pb=_b(
        '\n\rtest_v1.proto\x12\x08tests.v1\x1a,google/cloud/firestore_v1/proto/common.proto\x1a.google/cloud/firestore_v1/proto/document.proto\x1a/google/cloud/firestore_v1/proto/firestore.proto\x1a+google/cloud/firestore_v1/proto/query.proto\x1a\x1fgoogle/protobuf/timestamp.proto"*\n\tTestSuite\x12\x1d\n\x05tests\x18\x01 \x03(\x0b\x32\x0e.tests.v1.Test"\xe0\x02\n\x04Test\x12\x13\n\x0b\x64\x65scription\x18\x01 \x01(\t\x12 \n\x03get\x18\x02 \x01(\x0b\x32\x11.tests.v1.GetTestH\x00\x12&\n\x06\x63reate\x18\x03 \x01(\x0b\x32\x14.tests.v1.CreateTestH\x00\x12 \n\x03set\x18\x04 \x01(\x0b\x32\x11.tests.v1.SetTestH\x00\x12&\n\x06update\x18\x05 \x01(\x0b\x32\x14.tests.v1.UpdateTestH\x00\x12\x31\n\x0cupdate_paths\x18\x06 \x01(\x0b\x32\x19.tests.v1.UpdatePathsTestH\x00\x12&\n\x06\x64\x65lete\x18\x07 \x01(\x0b\x32\x14.tests.v1.DeleteTestH\x00\x12$\n\x05query\x18\x08 \x01(\x0b\x32\x13.tests.v1.QueryTestH\x00\x12&\n\x06listen\x18\t \x01(\x0b\x32\x14.tests.v1.ListenTestH\x00\x42\x06\n\x04test"Y\n\x07GetTest\x12\x14\n\x0c\x64oc_ref_path\x18\x01 \x01(\t\x12\x38\n\x07request\x18\x02 \x01(\x0b\x32\'.google.firestore.v1.GetDocumentRequest"|\n\nCreateTest\x12\x14\n\x0c\x64oc_ref_path\x18\x01 \x01(\t\x12\x11\n\tjson_data\x18\x02 \x01(\t\x12\x33\n\x07request\x18\x03 \x01(\x0b\x32".google.firestore.v1.CommitRequest\x12\x10\n\x08is_error\x18\x04 \x01(\x08"\x9e\x01\n\x07SetTest\x12\x14\n\x0c\x64oc_ref_path\x18\x01 \x01(\t\x12#\n\x06option\x18\x02 \x01(\x0b\x32\x13.tests.v1.SetOption\x12\x11\n\tjson_data\x18\x03 \x01(\t\x12\x33\n\x07request\x18\x04 \x01(\x0b\x32".google.firestore.v1.CommitRequest\x12\x10\n\x08is_error\x18\x05 \x01(\x08"\xb5\x01\n\nUpdateTest\x12\x14\n\x0c\x64oc_ref_path\x18\x01 \x01(\t\x12\x37\n\x0cprecondition\x18\x02 \x01(\x0b\x32!.google.firestore.v1.Precondition\x12\x11\n\tjson_data\x18\x03 \x01(\t\x12\x33\n\x07request\x18\x04 \x01(\x0b\x32".google.firestore.v1.CommitRequest\x12\x10\n\x08is_error\x18\x05 \x01(\x08"\xe6\x01\n\x0fUpdatePathsTest\x12\x14\n\x0c\x64oc_ref_path\x18\x01 \x01(\t\x12\x37\n\x0cprecondition\x18\x02 \x01(\x0b\x32!.google.firestore.v1.Precondition\x12(\n\x0b\x66ield_paths\x18\x03 \x03(\x0b\x32\x13.tests.v1.FieldPath\x12\x13\n\x0bjson_values\x18\x04 \x03(\t\x12\x33\n\x07request\x18\x05 \x01(\x0b\x32".google.firestore.v1.CommitRequest\x12\x10\n\x08is_error\x18\x06 \x01(\x08"\xa2\x01\n\nDeleteTest\x12\x14\n\x0c\x64oc_ref_path\x18\x01 \x01(\t\x12\x37\n\x0cprecondition\x18\x02 \x01(\x0b\x32!.google.firestore.v1.Precondition\x12\x33\n\x07request\x18\x03 \x01(\x0b\x32".google.firestore.v1.CommitRequest\x12\x10\n\x08is_error\x18\x04 \x01(\x08"=\n\tSetOption\x12\x0b\n\x03\x61ll\x18\x01 \x01(\x08\x12#\n\x06\x66ields\x18\x02 \x03(\x0b\x32\x13.tests.v1.FieldPath"\x88\x01\n\tQueryTest\x12\x11\n\tcoll_path\x18\x01 \x01(\t\x12!\n\x07\x63lauses\x18\x02 \x03(\x0b\x32\x10.tests.v1.Clause\x12\x33\n\x05query\x18\x03 \x01(\x0b\x32$.google.firestore.v1.StructuredQuery\x12\x10\n\x08is_error\x18\x04 \x01(\x08"\xbd\x02\n\x06\x43lause\x12"\n\x06select\x18\x01 \x01(\x0b\x32\x10.tests.v1.SelectH\x00\x12 \n\x05where\x18\x02 \x01(\x0b\x32\x0f.tests.v1.WhereH\x00\x12%\n\x08order_by\x18\x03 \x01(\x0b\x32\x11.tests.v1.OrderByH\x00\x12\x10\n\x06offset\x18\x04 \x01(\x05H\x00\x12\x0f\n\x05limit\x18\x05 \x01(\x05H\x00\x12$\n\x08start_at\x18\x06 \x01(\x0b\x32\x10.tests.v1.CursorH\x00\x12\'\n\x0bstart_after\x18\x07 \x01(\x0b\x32\x10.tests.v1.CursorH\x00\x12"\n\x06\x65nd_at\x18\x08 \x01(\x0b\x32\x10.tests.v1.CursorH\x00\x12&\n\nend_before\x18\t \x01(\x0b\x32\x10.tests.v1.CursorH\x00\x42\x08\n\x06\x63lause"-\n\x06Select\x12#\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x13.tests.v1.FieldPath"J\n\x05Where\x12!\n\x04path\x18\x01 \x01(\x0b\x32\x13.tests.v1.FieldPath\x12\n\n\x02op\x18\x02 \x01(\t\x12\x12\n\njson_value\x18\x03 \x01(\t"?\n\x07OrderBy\x12!\n\x04path\x18\x01 \x01(\x0b\x32\x13.tests.v1.FieldPath\x12\x11\n\tdirection\x18\x02 \x01(\t"J\n\x06\x43ursor\x12+\n\x0c\x64oc_snapshot\x18\x01 \x01(\x0b\x32\x15.tests.v1.DocSnapshot\x12\x13\n\x0bjson_values\x18\x02 \x03(\t".\n\x0b\x44ocSnapshot\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x11\n\tjson_data\x18\x02 \x01(\t"\x1a\n\tFieldPath\x12\r\n\x05\x66ield\x18\x01 \x03(\t"}\n\nListenTest\x12\x36\n\tresponses\x18\x01 \x03(\x0b\x32#.google.firestore.v1.ListenResponse\x12%\n\tsnapshots\x18\x02 \x03(\x0b\x32\x12.tests.v1.Snapshot\x12\x10\n\x08is_error\x18\x03 \x01(\x08"\x8c\x01\n\x08Snapshot\x12+\n\x04\x64ocs\x18\x01 \x03(\x0b\x32\x1d.google.firestore.v1.Document\x12$\n\x07\x63hanges\x18\x02 \x03(\x0b\x32\x13.tests.v1.DocChange\x12-\n\tread_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp"\xc9\x01\n\tDocChange\x12&\n\x04kind\x18\x01 \x01(\x0e\x32\x18.tests.v1.DocChange.Kind\x12*\n\x03\x64oc\x18\x02 \x01(\x0b\x32\x1d.google.firestore.v1.Document\x12\x11\n\told_index\x18\x03 \x01(\x05\x12\x11\n\tnew_index\x18\x04 \x01(\x05"B\n\x04Kind\x12\x14\n\x10KIND_UNSPECIFIED\x10\x00\x12\t\n\x05\x41\x44\x44\x45\x44\x10\x01\x12\x0b\n\x07REMOVED\x10\x02\x12\x0c\n\x08MODIFIED\x10\x03\x42x\n&com.google.cloud.firestore.conformance\xaa\x02"Google.Cloud.Firestore.Tests.Proto\xca\x02(Google\\Cloud\\Firestore\\Tests\\Conformanceb\x06proto3'
    ),
    dependencies=[
        google_dot_cloud_dot_firestore__v1_dot_proto_dot_common__pb2.DESCRIPTOR,
        google_dot_cloud_dot_firestore__v1_dot_proto_dot_document__pb2.DESCRIPTOR,
        google_dot_cloud_dot_firestore__v1_dot_proto_dot_firestore__pb2.DESCRIPTOR,
        google_dot_cloud_dot_firestore__v1_dot_proto_dot_query__pb2.DESCRIPTOR,
        google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,
    ],
)


_DOCCHANGE_KIND = _descriptor.EnumDescriptor(
    name="Kind",
    full_name="tests.v1.DocChange.Kind",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="KIND_UNSPECIFIED", index=0, number=0, options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="ADDED", index=1, number=1, options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="REMOVED", index=2, number=2, options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="MODIFIED", index=3, number=3, options=None, type=None
        ),
    ],
    containing_type=None,
    options=None,
    serialized_start=2875,
    serialized_end=2941,
)
_sym_db.RegisterEnumDescriptor(_DOCCHANGE_KIND)


_TESTSUITE = _descriptor.Descriptor(
    name="TestSuite",
    full_name="tests.v1.TestSuite",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="tests",
            full_name="tests.v1.TestSuite.tests",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        )
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=248,
    serialized_end=290,
)


_TEST = _descriptor.Descriptor(
    name="Test",
    full_name="tests.v1.Test",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="description",
            full_name="tests.v1.Test.description",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="get",
            full_name="tests.v1.Test.get",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="create",
            full_name="tests.v1.Test.create",
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="set",
            full_name="tests.v1.Test.set",
            index=3,
            number=4,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="update",
            full_name="tests.v1.Test.update",
            index=4,
            number=5,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="update_paths",
            full_name="tests.v1.Test.update_paths",
            index=5,
            number=6,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="delete",
            full_name="tests.v1.Test.delete",
            index=6,
            number=7,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="query",
            full_name="tests.v1.Test.query",
            index=7,
            number=8,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="listen",
            full_name="tests.v1.Test.listen",
            index=8,
            number=9,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name="test",
            full_name="tests.v1.Test.test",
            index=0,
            containing_type=None,
            fields=[],
        )
    ],
    serialized_start=293,
    serialized_end=645,
)


_GETTEST = _descriptor.Descriptor(
    name="GetTest",
    full_name="tests.v1.GetTest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="doc_ref_path",
            full_name="tests.v1.GetTest.doc_ref_path",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="request",
            full_name="tests.v1.GetTest.request",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=647,
    serialized_end=736,
)


_CREATETEST = _descriptor.Descriptor(
    name="CreateTest",
    full_name="tests.v1.CreateTest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="doc_ref_path",
            full_name="tests.v1.CreateTest.doc_ref_path",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="json_data",
            full_name="tests.v1.CreateTest.json_data",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="request",
            full_name="tests.v1.CreateTest.request",
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="is_error",
            full_name="tests.v1.CreateTest.is_error",
            index=3,
            number=4,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=738,
    serialized_end=862,
)


_SETTEST = _descriptor.Descriptor(
    name="SetTest",
    full_name="tests.v1.SetTest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="doc_ref_path",
            full_name="tests.v1.SetTest.doc_ref_path",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="option",
            full_name="tests.v1.SetTest.option",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="json_data",
            full_name="tests.v1.SetTest.json_data",
            index=2,
            number=3,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="request",
            full_name="tests.v1.SetTest.request",
            index=3,
            number=4,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="is_error",
            full_name="tests.v1.SetTest.is_error",
            index=4,
            number=5,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=865,
    serialized_end=1023,
)


_UPDATETEST = _descriptor.Descriptor(
    name="UpdateTest",
    full_name="tests.v1.UpdateTest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="doc_ref_path",
            full_name="tests.v1.UpdateTest.doc_ref_path",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="precondition",
            full_name="tests.v1.UpdateTest.precondition",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="json_data",
            full_name="tests.v1.UpdateTest.json_data",
            index=2,
            number=3,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="request",
            full_name="tests.v1.UpdateTest.request",
            index=3,
            number=4,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="is_error",
            full_name="tests.v1.UpdateTest.is_error",
            index=4,
            number=5,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=1026,
    serialized_end=1207,
)


_UPDATEPATHSTEST = _descriptor.Descriptor(
    name="UpdatePathsTest",
    full_name="tests.v1.UpdatePathsTest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="doc_ref_path",
            full_name="tests.v1.UpdatePathsTest.doc_ref_path",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="precondition",
            full_name="tests.v1.UpdatePathsTest.precondition",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="field_paths",
            full_name="tests.v1.UpdatePathsTest.field_paths",
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="json_values",
            full_name="tests.v1.UpdatePathsTest.json_values",
            index=3,
            number=4,
            type=9,
            cpp_type=9,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="request",
            full_name="tests.v1.UpdatePathsTest.request",
            index=4,
            number=5,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="is_error",
            full_name="tests.v1.UpdatePathsTest.is_error",
            index=5,
            number=6,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=1210,
    serialized_end=1440,
)


_DELETETEST = _descriptor.Descriptor(
    name="DeleteTest",
    full_name="tests.v1.DeleteTest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="doc_ref_path",
            full_name="tests.v1.DeleteTest.doc_ref_path",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="precondition",
            full_name="tests.v1.DeleteTest.precondition",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="request",
            full_name="tests.v1.DeleteTest.request",
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="is_error",
            full_name="tests.v1.DeleteTest.is_error",
            index=3,
            number=4,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=1443,
    serialized_end=1605,
)


_SETOPTION = _descriptor.Descriptor(
    name="SetOption",
    full_name="tests.v1.SetOption",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="all",
            full_name="tests.v1.SetOption.all",
            index=0,
            number=1,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="fields",
            full_name="tests.v1.SetOption.fields",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=1607,
    serialized_end=1668,
)


_QUERYTEST = _descriptor.Descriptor(
    name="QueryTest",
    full_name="tests.v1.QueryTest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="coll_path",
            full_name="tests.v1.QueryTest.coll_path",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="clauses",
            full_name="tests.v1.QueryTest.clauses",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="query",
            full_name="tests.v1.QueryTest.query",
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="is_error",
            full_name="tests.v1.QueryTest.is_error",
            index=3,
            number=4,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=1671,
    serialized_end=1807,
)


_CLAUSE = _descriptor.Descriptor(
    name="Clause",
    full_name="tests.v1.Clause",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="select",
            full_name="tests.v1.Clause.select",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="where",
            full_name="tests.v1.Clause.where",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="order_by",
            full_name="tests.v1.Clause.order_by",
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="offset",
            full_name="tests.v1.Clause.offset",
            index=3,
            number=4,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="limit",
            full_name="tests.v1.Clause.limit",
            index=4,
            number=5,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="start_at",
            full_name="tests.v1.Clause.start_at",
            index=5,
            number=6,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="start_after",
            full_name="tests.v1.Clause.start_after",
            index=6,
            number=7,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="end_at",
            full_name="tests.v1.Clause.end_at",
            index=7,
            number=8,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="end_before",
            full_name="tests.v1.Clause.end_before",
            index=8,
            number=9,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name="clause",
            full_name="tests.v1.Clause.clause",
            index=0,
            containing_type=None,
            fields=[],
        )
    ],
    serialized_start=1810,
    serialized_end=2127,
)


_SELECT = _descriptor.Descriptor(
    name="Select",
    full_name="tests.v1.Select",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="fields",
            full_name="tests.v1.Select.fields",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        )
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=2129,
    serialized_end=2174,
)


_WHERE = _descriptor.Descriptor(
    name="Where",
    full_name="tests.v1.Where",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="path",
            full_name="tests.v1.Where.path",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="op",
            full_name="tests.v1.Where.op",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="json_value",
            full_name="tests.v1.Where.json_value",
            index=2,
            number=3,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=2176,
    serialized_end=2250,
)


_ORDERBY = _descriptor.Descriptor(
    name="OrderBy",
    full_name="tests.v1.OrderBy",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="path",
            full_name="tests.v1.OrderBy.path",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="direction",
            full_name="tests.v1.OrderBy.direction",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=2252,
    serialized_end=2315,
)


_CURSOR = _descriptor.Descriptor(
    name="Cursor",
    full_name="tests.v1.Cursor",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="doc_snapshot",
            full_name="tests.v1.Cursor.doc_snapshot",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="json_values",
            full_name="tests.v1.Cursor.json_values",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=2317,
    serialized_end=2391,
)


_DOCSNAPSHOT = _descriptor.Descriptor(
    name="DocSnapshot",
    full_name="tests.v1.DocSnapshot",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="path",
            full_name="tests.v1.DocSnapshot.path",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="json_data",
            full_name="tests.v1.DocSnapshot.json_data",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=2393,
    serialized_end=2439,
)


_FIELDPATH = _descriptor.Descriptor(
    name="FieldPath",
    full_name="tests.v1.FieldPath",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="field",
            full_name="tests.v1.FieldPath.field",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        )
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=2441,
    serialized_end=2467,
)


_LISTENTEST = _descriptor.Descriptor(
    name="ListenTest",
    full_name="tests.v1.ListenTest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="responses",
            full_name="tests.v1.ListenTest.responses",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="snapshots",
            full_name="tests.v1.ListenTest.snapshots",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="is_error",
            full_name="tests.v1.ListenTest.is_error",
            index=2,
            number=3,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=2469,
    serialized_end=2594,
)


_SNAPSHOT = _descriptor.Descriptor(
    name="Snapshot",
    full_name="tests.v1.Snapshot",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="docs",
            full_name="tests.v1.Snapshot.docs",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="changes",
            full_name="tests.v1.Snapshot.changes",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="read_time",
            full_name="tests.v1.Snapshot.read_time",
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=2597,
    serialized_end=2737,
)


_DOCCHANGE = _descriptor.Descriptor(
    name="DocChange",
    full_name="tests.v1.DocChange",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="kind",
            full_name="tests.v1.DocChange.kind",
            index=0,
            number=1,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="doc",
            full_name="tests.v1.DocChange.doc",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="old_index",
            full_name="tests.v1.DocChange.old_index",
            index=2,
            number=3,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="new_index",
            full_name="tests.v1.DocChange.new_index",
            index=3,
            number=4,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[_DOCCHANGE_KIND],
    options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=2740,
    serialized_end=2941,
)

_TESTSUITE.fields_by_name["tests"].message_type = _TEST
_TEST.fields_by_name["get"].message_type = _GETTEST
_TEST.fields_by_name["create"].message_type = _CREATETEST
_TEST.fields_by_name["set"].message_type = _SETTEST
_TEST.fields_by_name["update"].message_type = _UPDATETEST
_TEST.fields_by_name["update_paths"].message_type = _UPDATEPATHSTEST
_TEST.fields_by_name["delete"].message_type = _DELETETEST
_TEST.fields_by_name["query"].message_type = _QUERYTEST
_TEST.fields_by_name["listen"].message_type = _LISTENTEST
_TEST.oneofs_by_name["test"].fields.append(_TEST.fields_by_name["get"])
_TEST.fields_by_name["get"].containing_oneof = _TEST.oneofs_by_name["test"]
_TEST.oneofs_by_name["test"].fields.append(_TEST.fields_by_name["create"])
_TEST.fields_by_name["create"].containing_oneof = _TEST.oneofs_by_name["test"]
_TEST.oneofs_by_name["test"].fields.append(_TEST.fields_by_name["set"])
_TEST.fields_by_name["set"].containing_oneof = _TEST.oneofs_by_name["test"]
_TEST.oneofs_by_name["test"].fields.append(_TEST.fields_by_name["update"])
_TEST.fields_by_name["update"].containing_oneof = _TEST.oneofs_by_name["test"]
_TEST.oneofs_by_name["test"].fields.append(_TEST.fields_by_name["update_paths"])
_TEST.fields_by_name["update_paths"].containing_oneof = _TEST.oneofs_by_name["test"]
_TEST.oneofs_by_name["test"].fields.append(_TEST.fields_by_name["delete"])
_TEST.fields_by_name["delete"].containing_oneof = _TEST.oneofs_by_name["test"]
_TEST.oneofs_by_name["test"].fields.append(_TEST.fields_by_name["query"])
_TEST.fields_by_name["query"].containing_oneof = _TEST.oneofs_by_name["test"]
_TEST.oneofs_by_name["test"].fields.append(_TEST.fields_by_name["listen"])
_TEST.fields_by_name["listen"].containing_oneof = _TEST.oneofs_by_name["test"]
_GETTEST.fields_by_name[
    "request"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_firestore__pb2._GETDOCUMENTREQUEST
)
_CREATETEST.fields_by_name[
    "request"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_firestore__pb2._COMMITREQUEST
)
_SETTEST.fields_by_name["option"].message_type = _SETOPTION
_SETTEST.fields_by_name[
    "request"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_firestore__pb2._COMMITREQUEST
)
_UPDATETEST.fields_by_name[
    "precondition"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_common__pb2._PRECONDITION
)
_UPDATETEST.fields_by_name[
    "request"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_firestore__pb2._COMMITREQUEST
)
_UPDATEPATHSTEST.fields_by_name[
    "precondition"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_common__pb2._PRECONDITION
)
_UPDATEPATHSTEST.fields_by_name["field_paths"].message_type = _FIELDPATH
_UPDATEPATHSTEST.fields_by_name[
    "request"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_firestore__pb2._COMMITREQUEST
)
_DELETETEST.fields_by_name[
    "precondition"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_common__pb2._PRECONDITION
)
_DELETETEST.fields_by_name[
    "request"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_firestore__pb2._COMMITREQUEST
)
_SETOPTION.fields_by_name["fields"].message_type = _FIELDPATH
_QUERYTEST.fields_by_name["clauses"].message_type = _CLAUSE
_QUERYTEST.fields_by_name[
    "query"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_query__pb2._STRUCTUREDQUERY
)
_CLAUSE.fields_by_name["select"].message_type = _SELECT
_CLAUSE.fields_by_name["where"].message_type = _WHERE
_CLAUSE.fields_by_name["order_by"].message_type = _ORDERBY
_CLAUSE.fields_by_name["start_at"].message_type = _CURSOR
_CLAUSE.fields_by_name["start_after"].message_type = _CURSOR
_CLAUSE.fields_by_name["end_at"].message_type = _CURSOR
_CLAUSE.fields_by_name["end_before"].message_type = _CURSOR
_CLAUSE.oneofs_by_name["clause"].fields.append(_CLAUSE.fields_by_name["select"])
_CLAUSE.fields_by_name["select"].containing_oneof = _CLAUSE.oneofs_by_name["clause"]
_CLAUSE.oneofs_by_name["clause"].fields.append(_CLAUSE.fields_by_name["where"])
_CLAUSE.fields_by_name["where"].containing_oneof = _CLAUSE.oneofs_by_name["clause"]
_CLAUSE.oneofs_by_name["clause"].fields.append(_CLAUSE.fields_by_name["order_by"])
_CLAUSE.fields_by_name["order_by"].containing_oneof = _CLAUSE.oneofs_by_name["clause"]
_CLAUSE.oneofs_by_name["clause"].fields.append(_CLAUSE.fields_by_name["offset"])
_CLAUSE.fields_by_name["offset"].containing_oneof = _CLAUSE.oneofs_by_name["clause"]
_CLAUSE.oneofs_by_name["clause"].fields.append(_CLAUSE.fields_by_name["limit"])
_CLAUSE.fields_by_name["limit"].containing_oneof = _CLAUSE.oneofs_by_name["clause"]
_CLAUSE.oneofs_by_name["clause"].fields.append(_CLAUSE.fields_by_name["start_at"])
_CLAUSE.fields_by_name["start_at"].containing_oneof = _CLAUSE.oneofs_by_name["clause"]
_CLAUSE.oneofs_by_name["clause"].fields.append(_CLAUSE.fields_by_name["start_after"])
_CLAUSE.fields_by_name["start_after"].containing_oneof = _CLAUSE.oneofs_by_name[
    "clause"
]
_CLAUSE.oneofs_by_name["clause"].fields.append(_CLAUSE.fields_by_name["end_at"])
_CLAUSE.fields_by_name["end_at"].containing_oneof = _CLAUSE.oneofs_by_name["clause"]
_CLAUSE.oneofs_by_name["clause"].fields.append(_CLAUSE.fields_by_name["end_before"])
_CLAUSE.fields_by_name["end_before"].containing_oneof = _CLAUSE.oneofs_by_name["clause"]
_SELECT.fields_by_name["fields"].message_type = _FIELDPATH
_WHERE.fields_by_name["path"].message_type = _FIELDPATH
_ORDERBY.fields_by_name["path"].message_type = _FIELDPATH
_CURSOR.fields_by_name["doc_snapshot"].message_type = _DOCSNAPSHOT
_LISTENTEST.fields_by_name[
    "responses"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_firestore__pb2._LISTENRESPONSE
)
_LISTENTEST.fields_by_name["snapshots"].message_type = _SNAPSHOT
_SNAPSHOT.fields_by_name[
    "docs"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_document__pb2._DOCUMENT
)
_SNAPSHOT.fields_by_name["changes"].message_type = _DOCCHANGE
_SNAPSHOT.fields_by_name[
    "read_time"
].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_DOCCHANGE.fields_by_name["kind"].enum_type = _DOCCHANGE_KIND
_DOCCHANGE.fields_by_name[
    "doc"
].message_type = (
    google_dot_cloud_dot_firestore__v1_dot_proto_dot_document__pb2._DOCUMENT
)
_DOCCHANGE_KIND.containing_type = _DOCCHANGE
DESCRIPTOR.message_types_by_name["TestSuite"] = _TESTSUITE
DESCRIPTOR.message_types_by_name["Test"] = _TEST
DESCRIPTOR.message_types_by_name["GetTest"] = _GETTEST
DESCRIPTOR.message_types_by_name["CreateTest"] = _CREATETEST
DESCRIPTOR.message_types_by_name["SetTest"] = _SETTEST
DESCRIPTOR.message_types_by_name["UpdateTest"] = _UPDATETEST
DESCRIPTOR.message_types_by_name["UpdatePathsTest"] = _UPDATEPATHSTEST
DESCRIPTOR.message_types_by_name["DeleteTest"] = _DELETETEST
DESCRIPTOR.message_types_by_name["SetOption"] = _SETOPTION
DESCRIPTOR.message_types_by_name["QueryTest"] = _QUERYTEST
DESCRIPTOR.message_types_by_name["Clause"] = _CLAUSE
DESCRIPTOR.message_types_by_name["Select"] = _SELECT
DESCRIPTOR.message_types_by_name["Where"] = _WHERE
DESCRIPTOR.message_types_by_name["OrderBy"] = _ORDERBY
DESCRIPTOR.message_types_by_name["Cursor"] = _CURSOR
DESCRIPTOR.message_types_by_name["DocSnapshot"] = _DOCSNAPSHOT
DESCRIPTOR.message_types_by_name["FieldPath"] = _FIELDPATH
DESCRIPTOR.message_types_by_name["ListenTest"] = _LISTENTEST
DESCRIPTOR.message_types_by_name["Snapshot"] = _SNAPSHOT
DESCRIPTOR.message_types_by_name["DocChange"] = _DOCCHANGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TestSuite = _reflection.GeneratedProtocolMessageType(
    "TestSuite",
    (_message.Message,),
    dict(
        DESCRIPTOR=_TESTSUITE,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.TestSuite)
    ),
)
_sym_db.RegisterMessage(TestSuite)

Test = _reflection.GeneratedProtocolMessageType(
    "Test",
    (_message.Message,),
    dict(
        DESCRIPTOR=_TEST,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.Test)
    ),
)
_sym_db.RegisterMessage(Test)

GetTest = _reflection.GeneratedProtocolMessageType(
    "GetTest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_GETTEST,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.GetTest)
    ),
)
_sym_db.RegisterMessage(GetTest)

CreateTest = _reflection.GeneratedProtocolMessageType(
    "CreateTest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_CREATETEST,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.CreateTest)
    ),
)
_sym_db.RegisterMessage(CreateTest)

SetTest = _reflection.GeneratedProtocolMessageType(
    "SetTest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_SETTEST,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.SetTest)
    ),
)
_sym_db.RegisterMessage(SetTest)

UpdateTest = _reflection.GeneratedProtocolMessageType(
    "UpdateTest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_UPDATETEST,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.UpdateTest)
    ),
)
_sym_db.RegisterMessage(UpdateTest)

UpdatePathsTest = _reflection.GeneratedProtocolMessageType(
    "UpdatePathsTest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_UPDATEPATHSTEST,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.UpdatePathsTest)
    ),
)
_sym_db.RegisterMessage(UpdatePathsTest)

DeleteTest = _reflection.GeneratedProtocolMessageType(
    "DeleteTest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_DELETETEST,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.DeleteTest)
    ),
)
_sym_db.RegisterMessage(DeleteTest)

SetOption = _reflection.GeneratedProtocolMessageType(
    "SetOption",
    (_message.Message,),
    dict(
        DESCRIPTOR=_SETOPTION,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.SetOption)
    ),
)
_sym_db.RegisterMessage(SetOption)

QueryTest = _reflection.GeneratedProtocolMessageType(
    "QueryTest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_QUERYTEST,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.QueryTest)
    ),
)
_sym_db.RegisterMessage(QueryTest)

Clause = _reflection.GeneratedProtocolMessageType(
    "Clause",
    (_message.Message,),
    dict(
        DESCRIPTOR=_CLAUSE,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.Clause)
    ),
)
_sym_db.RegisterMessage(Clause)

Select = _reflection.GeneratedProtocolMessageType(
    "Select",
    (_message.Message,),
    dict(
        DESCRIPTOR=_SELECT,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.Select)
    ),
)
_sym_db.RegisterMessage(Select)

Where = _reflection.GeneratedProtocolMessageType(
    "Where",
    (_message.Message,),
    dict(
        DESCRIPTOR=_WHERE,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.Where)
    ),
)
_sym_db.RegisterMessage(Where)

OrderBy = _reflection.GeneratedProtocolMessageType(
    "OrderBy",
    (_message.Message,),
    dict(
        DESCRIPTOR=_ORDERBY,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.OrderBy)
    ),
)
_sym_db.RegisterMessage(OrderBy)

Cursor = _reflection.GeneratedProtocolMessageType(
    "Cursor",
    (_message.Message,),
    dict(
        DESCRIPTOR=_CURSOR,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.Cursor)
    ),
)
_sym_db.RegisterMessage(Cursor)

DocSnapshot = _reflection.GeneratedProtocolMessageType(
    "DocSnapshot",
    (_message.Message,),
    dict(
        DESCRIPTOR=_DOCSNAPSHOT,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.DocSnapshot)
    ),
)
_sym_db.RegisterMessage(DocSnapshot)

FieldPath = _reflection.GeneratedProtocolMessageType(
    "FieldPath",
    (_message.Message,),
    dict(
        DESCRIPTOR=_FIELDPATH,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.FieldPath)
    ),
)
_sym_db.RegisterMessage(FieldPath)

ListenTest = _reflection.GeneratedProtocolMessageType(
    "ListenTest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_LISTENTEST,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.ListenTest)
    ),
)
_sym_db.RegisterMessage(ListenTest)

Snapshot = _reflection.GeneratedProtocolMessageType(
    "Snapshot",
    (_message.Message,),
    dict(
        DESCRIPTOR=_SNAPSHOT,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.Snapshot)
    ),
)
_sym_db.RegisterMessage(Snapshot)

DocChange = _reflection.GeneratedProtocolMessageType(
    "DocChange",
    (_message.Message,),
    dict(
        DESCRIPTOR=_DOCCHANGE,
        __module__="test_v1_pb2"
        # @@protoc_insertion_point(class_scope:tests.v1.DocChange)
    ),
)
_sym_db.RegisterMessage(DocChange)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(
    descriptor_pb2.FileOptions(),
    _b(
        '\n&com.google.cloud.firestore.conformance\252\002"Google.Cloud.Firestore.Tests.Proto\312\002(Google\\Cloud\\Firestore\\Tests\\Conformance'
    ),
)
# @@protoc_insertion_point(module_scope)
